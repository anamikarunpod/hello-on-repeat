name: Run Hello World on Runpod via REST

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

jobs:
  run-on-runpod:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Zip script
        run: zip code.zip hello.py

      - name: Create pod via REST
        id: create_pod
        run: |
          RESPONSE=$(curl -s -X POST https://api.runpod.io/pod \
            -H "Authorization: Bearer ${{ secrets.RUNPOD_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
                "allowedCudaVersions": [
                  "12.4", "12.5"
                ],
                "cloudType": "SECURE",
                "computeType": "GPU",
                "containerDiskInGb": 50,
                "countryCodes": [
                  ""
                ],
                "cpuFlavorIds": [
                  "cpu3c"
                ],
                "cpuFlavorPriority": "availability",
                "dataCenterIds": [
                ],
                "dataCenterPriority": "availability",
                "dockerEntrypoint": [],
                "dockerStartCmd": [],
                "env": {
                  "ENV_VAR": "value"
                },
                "gpuCount": 1,
                "gpuTypeIds": [
                  "NVIDIA GeForce RTX 5090"
                ],
                "gpuTypePriority": "availability",
                "imageName": "runpod/pytorch:2.1.0-py3.10-cuda11.8.0-devel-ubuntu22.04",
                "interruptible": false,
                "locked": false,
                "minDiskBandwidthMBps": 1,
                "minDownloadMbps": 1,
                "minRAMPerGPU": 8,
                "minUploadMbps": 1,
                "minVCPUPerGPU": 2,
                "name": "test pod on-repeat",
                "networkVolumeId": "",
                "ports": [
                  "8888/http",
                  "22/tcp"
                ],
                "supportPublicIp": true,
                "templateId": "runpod-torch-v21",
                "vcpuCount": 2,
                "volumeInGb": 20,
                "volumeMountPath": "/workspace"
              }')
          echo "$RESPONSE"
          POD_ID=$(echo "$RESPONSE" | jq -r '.id')
          echo "Created Pod ID: $POD_ID"
          echo "POD_ID=$POD_ID" >> $GITHUB_ENV

      - name: Wait for pod to be ready
        run: |
          for i in {1..10}; do
            STATUS=$(curl -s -H "Authorization: Bearer ${{ secrets.RUNPOD_API_KEY }}" \
              https://api.runpod.io/pod/$POD_ID | jq -r '.runtimeStatus')
            echo "Pod Status: $STATUS"
            if [ "$STATUS" = "RUNNING" ]; then break; fi
            sleep 10
          done

      - name: Upload script to pod
        run: |
          curl -X PUT https://api.runpod.io/pod/$POD_ID/upload/code.zip \
            -H "Authorization: Bearer ${{ secrets.RUNPOD_API_KEY }}" \
            --data-binary @code.zip

      - name: Run script on pod
        run: |
          RUN_RES=$(curl -s -X POST https://api.runpod.io/pod/$POD_ID/run \
            -H "Authorization: Bearer ${{ secrets.RUNPOD_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "input": {
                "command": "unzip code.zip && python hello.py"
              }
            }')
          JOB_ID=$(echo "$RUN_RES" | jq -r '.id')
          echo "JOB_ID=$JOB_ID" >> $GITHUB_ENV

      - name: Wait for job to complete
        run: |
          for i in {1..30}; do
            STATUS=$(curl -s -X GET https://api.runpod.io/pod/$POD_ID/status/$JOB_ID \
              -H "Authorization: Bearer ${{ secrets.RUNPOD_API_KEY }}" | jq -r '.status')
            echo "Job Status: $STATUS"
            if [ "$STATUS" = "COMPLETED" ] || [ "$STATUS" = "FAILED" ]; then break; fi
            sleep 10
          done

      - name: Delete pod
        run: |
          curl -X DELETE https://api.runpod.io/pod/$POD_ID \
            -H "Authorization: Bearer ${{ secrets.RUNPOD_API_KEY }}"
